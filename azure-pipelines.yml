trigger: none
pr: none

variables:
  appName: 'customgptapp2'
  resourceGroup: 'rggptapp'
  serviceConnection: 'Devops-SP'
  pythonVersion: '3.11'
  packageDir: '$(Build.ArtifactStagingDirectory)'

stages:
  - stage: Build
    displayName: 'Build & Zip FastAPI'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        pool:
          vmImage: 'windows-latest'
        steps:
          # Python setup
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
              addToPath: true
            displayName: 'Use Python'

          - script: |
              python -m venv venv
              call venv\Scripts\activate
              pip install -r requirements.txt
            displayName: 'Install Python Dependencies'

          # Node setup
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Use Node.js'

          - script: |
              cd $(reactFolder)
              npm install
              npm run build
            displayName: 'Build React Frontend'

          # Copy React build to FastAPI static folder
          - script: |
              rmdir /S /Q $(staticFolder)
              mkdir $(staticFolder)
              xcopy /E /I /Y "$(reactFolder)\dist\*" "$(staticFolder)\"
            displayName: 'Copy React Build to Static Folder'

          # Zip the entire app
          - powershell: |
              Add-Type -A 'System.IO.Compression.FileSystem'
              [IO.Compression.ZipFile]::CreateFromDirectory("$(Build.SourcesDirectory)", "$(Build.ArtifactStagingDirectory)\$(zipName)")
            displayName: 'Zip FastAPI Project'

          # Publish zipped artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\$(zipName)'
              ArtifactName: 'fastapi-zipped'
              publishLocation: 'Container'
            displayName: 'Publish Zipped Artifact'

  - stage: Deploy
    displayName: 'Deploy Zipped FastAPI App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployJob
        displayName: 'Deploy Job'
        pool:
          vmImage: 'windows-latest'
        steps:
          - download: current
            artifact: fastapi-zipped

          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(serviceConnection)'
              appType: 'webAppLinux'
              appName: '$(appName)'
              package: '$(Pipeline.Workspace)/fastapi-zipped/$(zipName)'
            displayName: 'Deploy FastAPI App via Zip'